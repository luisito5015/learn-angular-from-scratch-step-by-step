{"ast":null,"code":"import _classCallCheck from \"/Users/luiscotto/Documents/Projects/CS-470/practice/lafs-web/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/luiscotto/Documents/Projects/CS-470/practice/lafs-web/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/luiscotto/Documents/Projects/CS-470/practice/lafs-web/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/luiscotto/Documents/Projects/CS-470/practice/lafs-web/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Http } from '@angular/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { JSONSearchParams } from '../core/search.params';\nimport { ErrorHandler } from '../core/error.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/http\";\nimport * as i2 from \"./SDKModels\";\nimport * as i3 from \"../core/auth.service\";\nimport * as i4 from \"../core/search.params\";\nimport * as i5 from \"../core/error.service\";\n/**\n * Api services for the `Question` model.\n */\n\nexport var QuestionApi = /*#__PURE__*/(function () {\n  var QuestionApi = /*#__PURE__*/function (_BaseLoopBackApi) {\n    _inherits(QuestionApi, _BaseLoopBackApi);\n\n    var _super = _createSuper(QuestionApi);\n\n    function QuestionApi(http, models, auth, searchParams, errorHandler) {\n      var _this;\n\n      _classCallCheck(this, QuestionApi);\n\n      _this = _super.call(this, http, models, auth, searchParams, errorHandler);\n      _this.http = http;\n      _this.models = models;\n      _this.auth = auth;\n      _this.searchParams = searchParams;\n      _this.errorHandler = errorHandler;\n      return _this;\n    }\n    /**\n     * Find a related item by id for answers.\n     *\n     * @param {any} id question id\n     *\n     * @param {any} fk Foreign key for answers\n     *\n     * @returns {object} An empty reference that will be\n     *   populated with the actual data once the response is returned\n     *   from the server.\n     *\n     * <em>\n     * (The remote method definition does not provide any description.\n     * This usually means the response is a `Question` object.)\n     * </em>\n     */\n\n\n    _createClass(QuestionApi, [{\n      key: \"findByIdAnswers\",\n      value: function findByIdAnswers(id, fk, customHeaders) {\n        var _method = \"GET\";\n\n        var _url = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() + \"/questions/:id/answers/:fk\";\n\n        var _routeParams = {\n          id: id,\n          fk: fk\n        };\n        var _postBody = {};\n        var _urlParams = {};\n        var result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n        return result;\n      }\n      /**\n       * Delete a related item by id for answers.\n       *\n       * @param {any} id question id\n       *\n       * @param {any} fk Foreign key for answers\n       *\n       * @returns {object} An empty reference that will be\n       *   populated with the actual data once the response is returned\n       *   from the server.\n       *\n       * This method returns no data.\n       */\n\n    }, {\n      key: \"destroyByIdAnswers\",\n      value: function destroyByIdAnswers(id, fk, customHeaders) {\n        var _method = \"DELETE\";\n\n        var _url = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() + \"/questions/:id/answers/:fk\";\n\n        var _routeParams = {\n          id: id,\n          fk: fk\n        };\n        var _postBody = {};\n        var _urlParams = {};\n        var result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n        return result;\n      }\n      /**\n       * Update a related item by id for answers.\n       *\n       * @param {any} id question id\n       *\n       * @param {any} fk Foreign key for answers\n       *\n       * @param {object} data Request data.\n       *\n       * This method expects a subset of model properties as request parameters.\n       *\n       * @returns {object} An empty reference that will be\n       *   populated with the actual data once the response is returned\n       *   from the server.\n       *\n       * <em>\n       * (The remote method definition does not provide any description.\n       * This usually means the response is a `Question` object.)\n       * </em>\n       */\n\n    }, {\n      key: \"updateByIdAnswers\",\n      value: function updateByIdAnswers(id, fk) {\n        var data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n        var customHeaders = arguments.length > 3 ? arguments[3] : undefined;\n        var _method = \"PUT\";\n\n        var _url = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() + \"/questions/:id/answers/:fk\";\n\n        var _routeParams = {\n          id: id,\n          fk: fk\n        };\n        var _postBody = {\n          data: data\n        };\n        var _urlParams = {};\n        var result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n        return result;\n      }\n      /**\n       * Queries answers of question.\n       *\n       * @param {any} id question id\n       *\n       * @param {object} filter\n       *\n       * @returns {object[]} An empty reference that will be\n       *   populated with the actual data once the response is returned\n       *   from the server.\n       *\n       * <em>\n       * (The remote method definition does not provide any description.\n       * This usually means the response is a `Question` object.)\n       * </em>\n       */\n\n    }, {\n      key: \"getAnswers\",\n      value: function getAnswers(id) {\n        var filter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var customHeaders = arguments.length > 2 ? arguments[2] : undefined;\n        var _method = \"GET\";\n\n        var _url = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() + \"/questions/:id/answers\";\n\n        var _routeParams = {\n          id: id\n        };\n        var _postBody = {};\n        var _urlParams = {};\n        if (typeof filter !== 'undefined' && filter !== null) _urlParams.filter = filter;\n        var result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n        return result;\n      }\n      /**\n       * Creates a new instance in answers of this model.\n       *\n       * @param {any} id question id\n       *\n       * @param {object} data Request data.\n       *\n       * This method expects a subset of model properties as request parameters.\n       *\n       * @returns {object} An empty reference that will be\n       *   populated with the actual data once the response is returned\n       *   from the server.\n       *\n       * <em>\n       * (The remote method definition does not provide any description.\n       * This usually means the response is a `Question` object.)\n       * </em>\n       */\n\n    }, {\n      key: \"createAnswers\",\n      value: function createAnswers(id) {\n        var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var customHeaders = arguments.length > 2 ? arguments[2] : undefined;\n        var _method = \"POST\";\n\n        var _url = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() + \"/questions/:id/answers\";\n\n        var _routeParams = {\n          id: id\n        };\n        var _postBody = {\n          data: data\n        };\n        var _urlParams = {};\n        var result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n        return result;\n      }\n      /**\n       * Deletes all answers of this model.\n       *\n       * @param {any} id question id\n       *\n       * @returns {object} An empty reference that will be\n       *   populated with the actual data once the response is returned\n       *   from the server.\n       *\n       * This method returns no data.\n       */\n\n    }, {\n      key: \"deleteAnswers\",\n      value: function deleteAnswers(id, customHeaders) {\n        var _method = \"DELETE\";\n\n        var _url = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() + \"/questions/:id/answers\";\n\n        var _routeParams = {\n          id: id\n        };\n        var _postBody = {};\n        var _urlParams = {};\n        var result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n        return result;\n      }\n      /**\n       * Counts answers of question.\n       *\n       * @param {any} id question id\n       *\n       * @param {object} where Criteria to match model instances\n       *\n       * @returns {object} An empty reference that will be\n       *   populated with the actual data once the response is returned\n       *   from the server.\n       *\n       * Data properties:\n       *\n       *  - `count` â€“ `{number}` -\n       */\n\n    }, {\n      key: \"countAnswers\",\n      value: function countAnswers(id) {\n        var where = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var customHeaders = arguments.length > 2 ? arguments[2] : undefined;\n        var _method = \"GET\";\n\n        var _url = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() + \"/questions/:id/answers/count\";\n\n        var _routeParams = {\n          id: id\n        };\n        var _postBody = {};\n        var _urlParams = {};\n        if (typeof where !== 'undefined' && where !== null) _urlParams.where = where;\n        var result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n        return result;\n      }\n      /**\n       * Patch an existing model instance or insert a new one into the data source.\n       *\n       * @param {object} data Request data.\n       *\n       *  - `data` â€“ `{object}` - Model instance data\n       *\n       * @returns {object} An empty reference that will be\n       *   populated with the actual data once the response is returned\n       *   from the server.\n       *\n       * <em>\n       * (The remote method definition does not provide any description.\n       * This usually means the response is a `Question` object.)\n       * </em>\n       */\n\n    }, {\n      key: \"patchOrCreate\",\n      value: function patchOrCreate() {\n        var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        var customHeaders = arguments.length > 1 ? arguments[1] : undefined;\n        var _method = \"PATCH\";\n\n        var _url = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() + \"/questions\";\n\n        var _routeParams = {};\n        var _postBody = {\n          data: data\n        };\n        var _urlParams = {};\n        var result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n        return result;\n      }\n      /**\n       * Patch attributes for a model instance and persist it into the data source.\n       *\n       * @param {any} id question id\n       *\n       * @param {object} data Request data.\n       *\n       *  - `data` â€“ `{object}` - An object of model property name/value pairs\n       *\n       * @returns {object} An empty reference that will be\n       *   populated with the actual data once the response is returned\n       *   from the server.\n       *\n       * <em>\n       * (The remote method definition does not provide any description.\n       * This usually means the response is a `Question` object.)\n       * </em>\n       */\n\n    }, {\n      key: \"patchAttributes\",\n      value: function patchAttributes(id) {\n        var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var customHeaders = arguments.length > 2 ? arguments[2] : undefined;\n        var _method = \"PATCH\";\n\n        var _url = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() + \"/questions/:id\";\n\n        var _routeParams = {\n          id: id\n        };\n        var _postBody = {\n          data: data\n        };\n        var _urlParams = {};\n        var result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n        return result;\n      }\n      /**\n       * Creates a new instance in answers of this model.\n       *\n       * @param {any} id question id\n       *\n       * @param {object} data Request data.\n       *\n       * This method expects a subset of model properties as request parameters.\n       *\n       * @returns {object[]} An empty reference that will be\n       *   populated with the actual data once the response is returned\n       *   from the server.\n       *\n       * <em>\n       * (The remote method definition does not provide any description.\n       * This usually means the response is a `Question` object.)\n       * </em>\n       */\n\n    }, {\n      key: \"createManyAnswers\",\n      value: function createManyAnswers(id) {\n        var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n        var customHeaders = arguments.length > 2 ? arguments[2] : undefined;\n        var _method = \"POST\";\n\n        var _url = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() + \"/questions/:id/answers\";\n\n        var _routeParams = {\n          id: id\n        };\n        var _postBody = {\n          data: data\n        };\n        var _urlParams = {};\n        var result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n        return result;\n      }\n      /**\n       * The name of the model represented by this $resource,\n       * i.e. `Question`.\n       */\n\n    }, {\n      key: \"getModelName\",\n      value: function getModelName() {\n        return \"Question\";\n      }\n    }]);\n\n    return QuestionApi;\n  }(BaseLoopBackApi);\n\n  QuestionApi.Éµfac = function QuestionApi_Factory(t) {\n    return new (t || QuestionApi)(i0.ÉµÉµinject(Http), i0.ÉµÉµinject(SDKModels), i0.ÉµÉµinject(LoopBackAuth), i0.ÉµÉµinject(JSONSearchParams), i0.ÉµÉµinject(ErrorHandler, 8));\n  };\n\n  QuestionApi.Éµprov = /*@__PURE__*/i0.ÉµÉµdefineInjectable({\n    token: QuestionApi,\n    factory: QuestionApi.Éµfac\n  });\n  return QuestionApi;\n})();","map":null,"metadata":{},"sourceType":"module"}