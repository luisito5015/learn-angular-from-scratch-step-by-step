{"ast":null,"code":"import _classCallCheck from \"/Users/luiscotto/Documents/Projects/CS-470/practice/lafs-web/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/luiscotto/Documents/Projects/CS-470/practice/lafs-web/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { QuestionApi, Question } from '../../../sdk';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../sdk\";\nexport var QuestionsService = /*#__PURE__*/(function () {\n  var QuestionsService = /*#__PURE__*/function () {\n    function QuestionsService(questionApi) {\n      _classCallCheck(this, QuestionsService);\n\n      this.questionApi = questionApi;\n    }\n\n    _createClass(QuestionsService, [{\n      key: \"getQuestions\",\n      value: function getQuestions() {\n        var filter = {\n          \"include\": {\n            \"relation\": \"answers\"\n          }\n        };\n        return this.questionApi.find(filter).toPromise();\n      }\n    }, {\n      key: \"getQuestion\",\n      value: function getQuestion(questionId) {\n        var query = {\n          id: questionId\n        };\n        return this.questionApi.find({\n          where: query\n        }).toPromise();\n      }\n    }, {\n      key: \"getQuestionsByCategory\",\n      value: function getQuestionsByCategory(category_slug) {\n        var filter = {\n          \"include\": {\n            \"relation\": \"answers\"\n          },\n          \"where\": {\n            \"categorySlug\": category_slug\n          }\n        };\n        return this.questionApi.find(filter).toPromise();\n      }\n    }, {\n      key: \"getQuestionBySlug\",\n      value: function getQuestionBySlug(slug) {\n        var filter = {\n          \"include\": {\n            \"relation\": \"answers\"\n          },\n          \"where\": {\n            \"questionSlug\": slug\n          }\n        };\n        return this.questionApi.findOne(filter).toPromise();\n      }\n    }, {\n      key: \"deleteQuestion\",\n      value: function deleteQuestion(questionId) {\n        return this.questionApi.deleteById(questionId).toPromise();\n      }\n    }, {\n      key: \"updateQuestion\",\n      value: function updateQuestion(question) {\n        return this.questionApi.updateAttributes(question.id, question).toPromise();\n      }\n    }, {\n      key: \"createQuestion\",\n      value: function createQuestion(values) {\n        var data = new Question();\n        data.question = values.question;\n        data.questionSlug = values.questionSlug;\n        data.categorySlug = values.categorySlug;\n        return this.questionApi.create(data).toPromise();\n      }\n    }]);\n\n    return QuestionsService;\n  }();\n\n  QuestionsService.ɵfac = function QuestionsService_Factory(t) {\n    return new (t || QuestionsService)(i0.ɵɵinject(i1.QuestionApi));\n  };\n\n  QuestionsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: QuestionsService,\n    factory: QuestionsService.ɵfac\n  });\n  return QuestionsService;\n})();","map":null,"metadata":{},"sourceType":"module"}