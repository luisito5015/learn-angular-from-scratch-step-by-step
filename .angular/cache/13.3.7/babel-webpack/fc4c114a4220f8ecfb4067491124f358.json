{"ast":null,"code":"import _classCallCheck from \"/Users/luiscotto/Documents/Projects/CS-470/practice/lafs-web/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/luiscotto/Documents/Projects/CS-470/practice/lafs-web/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nexport var Answer = /*#__PURE__*/function () {\n  function Answer(data) {\n    _classCallCheck(this, Answer);\n\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `Answer`.\n   */\n\n\n  _createClass(Answer, null, [{\n    key: \"getModelName\",\n    value: function getModelName() {\n      return \"Answer\";\n    }\n    /**\n    * @method factory\n    * @author Jonathan Casarrubias\n    * @license MIT\n    * This method creates an instance of Answer for dynamic purposes.\n    **/\n\n  }, {\n    key: \"factory\",\n    value: function factory(data) {\n      return new Answer(data);\n    }\n    /**\n    * @method getModelDefinition\n    * @author Julien Ledun\n    * @license MIT\n    * This method returns an object that represents some of the model\n    * definitions.\n    **/\n\n  }, {\n    key: \"getModelDefinition\",\n    value: function getModelDefinition() {\n      return {\n        name: 'Answer',\n        plural: 'Answers',\n        path: 'Answers',\n        idName: 'id',\n        properties: {\n          \"answer\": {\n            name: 'answer',\n            type: 'string'\n          },\n          \"negativeVotes\": {\n            name: 'negativeVotes',\n            type: 'number',\n            default: 0\n          },\n          \"positiveVotes\": {\n            name: 'positiveVotes',\n            type: 'number',\n            default: 0\n          },\n          \"id\": {\n            name: 'id',\n            type: 'any'\n          },\n          \"questionId\": {\n            name: 'questionId',\n            type: 'any'\n          }\n        },\n        relations: {\n          question: {\n            name: 'question',\n            type: 'Question',\n            model: 'Question',\n            relationType: 'belongsTo',\n            keyFrom: 'questionId',\n            keyTo: 'id'\n          }\n        }\n      };\n    }\n  }]);\n\n  return Answer;\n}();","map":null,"metadata":{},"sourceType":"module"}