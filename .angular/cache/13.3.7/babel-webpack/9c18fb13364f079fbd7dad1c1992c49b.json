{"ast":null,"code":"import _classCallCheck from \"/Users/luiscotto/Documents/Projects/CS-470/practice/lafs-web/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/luiscotto/Documents/Projects/CS-470/practice/lafs-web/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { AnswerApi, Answer } from '../../../sdk';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../sdk\";\nexport var AnswersService = /*#__PURE__*/(function () {\n  var AnswersService = /*#__PURE__*/function () {\n    function AnswersService(answerApi) {\n      _classCallCheck(this, AnswersService);\n\n      this.answerApi = answerApi;\n    }\n\n    _createClass(AnswersService, [{\n      key: \"getAnswers\",\n      value: function getAnswers(questionId) {\n        var query = {\n          questionId: questionId\n        };\n        return this.answerApi.find({\n          where: query\n        }).toPromise();\n      }\n    }, {\n      key: \"getAnswer\",\n      value: function getAnswer(anserId) {\n        var query = {\n          id: anserId\n        };\n        return this.answerApi.find({\n          where: query\n        }).toPromise();\n      }\n    }, {\n      key: \"deleteAnswer\",\n      value: function deleteAnswer(answerId) {\n        return this.answerApi.deleteById(answerId).toPromise();\n      }\n    }, {\n      key: \"updateAnswer\",\n      value: function updateAnswer(values) {\n        var data = new Answer();\n        data.answer = values.answer;\n        data.positiveVotes = values.positiveVotes;\n        data.negativeVotes = values.negativeVotes;\n        data.questionId = values.questionId;\n        return this.answerApi.updateAttributes(values.id, data).toPromise();\n      }\n    }, {\n      key: \"createAnswer\",\n      value: function createAnswer(values) {\n        var data = new Answer();\n        data.answer = values.answer;\n        data.questionId = values.questionId;\n        return this.answerApi.create(data).toPromise();\n      }\n    }, {\n      key: \"countAnswers\",\n      value: function countAnswers(questionId) {\n        var query = {\n          questionId: questionId\n        };\n        return this.answerApi.count({\n          where: query\n        }).toPromise();\n      }\n    }]);\n\n    return AnswersService;\n  }();\n\n  AnswersService.ɵfac = function AnswersService_Factory(t) {\n    return new (t || AnswersService)(i0.ɵɵinject(i1.AnswerApi));\n  };\n\n  AnswersService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AnswersService,\n    factory: AnswersService.ɵfac\n  });\n  return AnswersService;\n})();","map":null,"metadata":{},"sourceType":"module"}