{"ast":null,"code":"import _classCallCheck from \"/Users/luiscotto/Documents/Projects/CS-470/practice/lafs-web/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/luiscotto/Documents/Projects/CS-470/practice/lafs-web/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { LoopBackConfig } from '../../lb.config';\nimport * as i0 from \"@angular/core\";\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@johncasarrubias>\n* @module LoggerService\n* @license MIT\n* @description\n* Console Log wrapper that can be disabled in production mode\n**/\n\nexport var LoggerService = /*#__PURE__*/(function () {\n  var LoggerService = /*#__PURE__*/function () {\n    function LoggerService() {\n      _classCallCheck(this, LoggerService);\n    }\n\n    _createClass(LoggerService, [{\n      key: \"log\",\n      value: function log() {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        if (LoopBackConfig.debuggable()) console.log.apply(console, args);\n      }\n    }, {\n      key: \"info\",\n      value: function info() {\n        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n\n        if (LoopBackConfig.debuggable()) console.info.apply(console, args);\n      }\n    }, {\n      key: \"error\",\n      value: function error() {\n        for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          args[_key3] = arguments[_key3];\n        }\n\n        if (LoopBackConfig.debuggable()) console.error.apply(console, args);\n      }\n    }, {\n      key: \"count\",\n      value: function count(arg) {\n        if (LoopBackConfig.debuggable()) console.count(arg);\n      }\n    }, {\n      key: \"group\",\n      value: function group(arg) {\n        if (LoopBackConfig.debuggable()) console.count(arg);\n      }\n    }, {\n      key: \"groupEnd\",\n      value: function groupEnd() {\n        if (LoopBackConfig.debuggable()) console.groupEnd();\n      }\n    }, {\n      key: \"profile\",\n      value: function profile(arg) {\n        if (LoopBackConfig.debuggable()) console.count(arg);\n      }\n    }, {\n      key: \"profileEnd\",\n      value: function profileEnd() {\n        if (LoopBackConfig.debuggable()) console.profileEnd();\n      }\n    }, {\n      key: \"time\",\n      value: function time(arg) {\n        if (LoopBackConfig.debuggable()) console.time(arg);\n      }\n    }, {\n      key: \"timeEnd\",\n      value: function timeEnd(arg) {\n        if (LoopBackConfig.debuggable()) console.timeEnd(arg);\n      }\n    }]);\n\n    return LoggerService;\n  }();\n\n  LoggerService.ɵfac = function LoggerService_Factory(t) {\n    return new (t || LoggerService)();\n  };\n\n  LoggerService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LoggerService,\n    factory: LoggerService.ɵfac\n  });\n  return LoggerService;\n})();","map":null,"metadata":{},"sourceType":"module"}