{"ast":null,"code":"import _classCallCheck from \"/Users/luiscotto/Documents/Projects/CS-470/practice/lafs-web/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/luiscotto/Documents/Projects/CS-470/practice/lafs-web/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { forkJoin as observableForkJoin } from 'rxjs';\nimport { ActivatedRouteSnapshot } from \"@angular/router\";\nimport { QuestionsService } from '../services/questions.service';\nimport { CategoriesService } from '../services/categories.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/questions.service\";\nimport * as i2 from \"../services/categories.service\";\nexport var CategoryQuestionsResolver = /*#__PURE__*/(function () {\n  var CategoryQuestionsResolver = /*#__PURE__*/function () {\n    function CategoryQuestionsResolver(questionsService, categoriesService) {\n      _classCallCheck(this, CategoryQuestionsResolver);\n\n      this.questionsService = questionsService;\n      this.categoriesService = categoriesService;\n    }\n\n    _createClass(CategoryQuestionsResolver, [{\n      key: \"resolve\",\n      value: function resolve(route) {\n        var _this = this;\n\n        return new Promise(function (resolve, reject) {\n          //get current category slug form url\n          var category_slug = route.paramMap.get('categorySlug');\n          observableForkJoin(_this.categoriesService.getCategoryBySlug(category_slug), _this.questionsService.getQuestionsByCategory(category_slug)).subscribe(function (data) {\n            var breadcrumbs = [{\n              url: '/',\n              label: 'Categories'\n            }, {\n              url: 'questions/about/' + category_slug,\n              label: data[0].title\n            }];\n            return resolve({\n              questions: data[1],\n              category_title: data[0].title,\n              category_slug: category_slug,\n              breadcrumbs: breadcrumbs\n            });\n          }, function (err) {\n            console.log(err);\n            return resolve(null);\n          });\n        });\n      }\n    }]);\n\n    return CategoryQuestionsResolver;\n  }();\n\n  CategoryQuestionsResolver.ɵfac = function CategoryQuestionsResolver_Factory(t) {\n    return new (t || CategoryQuestionsResolver)(i0.ɵɵinject(i1.QuestionsService), i0.ɵɵinject(i2.CategoriesService));\n  };\n\n  CategoryQuestionsResolver.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CategoryQuestionsResolver,\n    factory: CategoryQuestionsResolver.ɵfac\n  });\n  return CategoryQuestionsResolver;\n})();","map":null,"metadata":{},"sourceType":"module"}