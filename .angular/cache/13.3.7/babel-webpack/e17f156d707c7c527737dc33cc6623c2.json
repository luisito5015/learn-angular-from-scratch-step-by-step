{"ast":null,"code":"import _classCallCheck from \"/Users/luiscotto/Documents/Projects/CS-470/practice/lafs-web/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/luiscotto/Documents/Projects/CS-470/practice/lafs-web/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n\nvar _a;\n\nimport { __decorate, __metadata } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { AnswersService } from '../services/answers.service';\nimport { MatDialog } from '@angular/material';\nimport { DeleteAnswerModalComponent } from './delete-answer/delete-answer-modal.component';\nimport { NewAnswerModalComponent } from './new-answer/new-answer-modal.component';\nimport { UpdateAnswerModalComponent } from './update-answer/update-answer-modal.component';\n\nvar QuestionAnswersComponent = /*#__PURE__*/function () {\n  function QuestionAnswersComponent(answersService, route, dialog) {\n    _classCallCheck(this, QuestionAnswersComponent);\n\n    this.answersService = answersService;\n    this.route = route;\n    this.dialog = dialog;\n  }\n\n  _createClass(QuestionAnswersComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this = this;\n\n      this.route.data.subscribe(function (routeData) {\n        var data = routeData['data'];\n\n        if (data) {\n          _this.question = data.question;\n        }\n      });\n    }\n  }, {\n    key: \"openNewAnswerModal\",\n    value: function openNewAnswerModal(questionId) {\n      var _this2 = this;\n\n      var dialogRef = this.dialog.open(NewAnswerModalComponent, {\n        data: {\n          questionId: questionId\n        }\n      });\n      dialogRef.afterClosed().subscribe(function (answer) {\n        if (answer) {\n          _this2.addAnswerToList(answer);\n        }\n      });\n    }\n  }, {\n    key: \"openUpdateAnswerModal\",\n    value: function openUpdateAnswerModal(answer) {\n      var dialogRef = this.dialog.open(UpdateAnswerModalComponent, {\n        data: {\n          answer: answer\n        }\n      });\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(answerId) {\n      var _this3 = this;\n\n      var dialogRef = this.dialog.open(DeleteAnswerModalComponent, {\n        data: {\n          answerId: answerId\n        }\n      });\n      dialogRef.afterClosed().subscribe(function (confirm) {\n        if (confirm) {\n          var index = _this3.question.answers.findIndex(function (answer) {\n            return answer.id === answerId;\n          });\n\n          _this3.question.answers.splice(index, 1);\n        }\n      });\n    }\n  }, {\n    key: \"addPositiveVote\",\n    value: function addPositiveVote(answer) {\n      answer.positiveVotes += 1;\n      this.answersService.updateAnswer(answer);\n    }\n  }, {\n    key: \"addNegativeVote\",\n    value: function addNegativeVote(answer) {\n      answer.negativeVotes += 1;\n      this.answersService.updateAnswer(answer);\n    }\n  }, {\n    key: \"addAnswerToList\",\n    value: function addAnswerToList(answer) {\n      this.question.answers.push(answer);\n    }\n  }]);\n\n  return QuestionAnswersComponent;\n}();\n\nQuestionAnswersComponent = __decorate([Component({\n  selector: 'answer',\n  styleUrls: ['./question-answers.scss'],\n  templateUrl: './question-answers.component.html'\n}), __metadata(\"design:paramtypes\", [AnswersService, ActivatedRoute, typeof (_a = typeof MatDialog !== \"undefined\" && MatDialog) === \"function\" ? _a : Object])], QuestionAnswersComponent);\nexport { QuestionAnswersComponent };","map":null,"metadata":{},"sourceType":"module"}