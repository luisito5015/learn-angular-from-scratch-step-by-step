{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/luiscotto/Documents/Projects/CS-470/practice/lafs-web/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/Users/luiscotto/Documents/Projects/CS-470/practice/lafs-web/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/luiscotto/Documents/Projects/CS-470/practice/lafs-web/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n\nvar _a;\n\nimport { __decorate, __metadata } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { QuestionsService } from '../services/questions.service';\nimport { AnswersService } from '../services/answers.service';\nimport { MatDialog } from '@angular/material';\nimport { DeleteQuestionModalComponent } from './delete-question/delete-question-modal.component';\nimport { NewQuestionModalComponent } from './new-question/new-question-modal.component';\n\nvar CategoryQuestionsComponent = /*#__PURE__*/function () {\n  function CategoryQuestionsComponent(route, questionsService, answersService, dialog) {\n    _classCallCheck(this, CategoryQuestionsComponent);\n\n    this.route = route;\n    this.questionsService = questionsService;\n    this.answersService = answersService;\n    this.dialog = dialog;\n  }\n\n  _createClass(CategoryQuestionsComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this = this;\n\n      this.route.data.subscribe(function (routeData) {\n        var data = routeData['data'];\n\n        if (data) {\n          _this.questions = data.questions;\n          _this.categoryTitle = data.category_title;\n          _this.categorySlug = data.category_slug;\n        }\n      });\n    }\n  }, {\n    key: \"getQuestions\",\n    value: function getQuestions() {\n      var _this2 = this;\n\n      this.questionsService.getQuestionsByCategory(this.categorySlug).then(function (questions) {\n        return _this2.questions = questions;\n      });\n    }\n  }, {\n    key: \"openNewQuestionModal\",\n    value: function openNewQuestionModal(categorySlug) {\n      var _this3 = this;\n\n      var dialogRef = this.dialog.open(NewQuestionModalComponent, {\n        data: {\n          categorySlug: categorySlug\n        }\n      });\n      dialogRef.afterClosed().subscribe(function (question) {\n        if (question) {\n          _this3.addQuestionToList(question);\n        }\n      });\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(questionId) {\n      var _this4 = this;\n\n      var dialogRef = this.dialog.open(DeleteQuestionModalComponent, {\n        data: {\n          questionId: questionId\n        }\n      });\n      dialogRef.afterClosed().subscribe(function (confirm) {\n        if (confirm) {\n          // refresh the questions list\n          var index = _this4.questions.findIndex(function (question) {\n            return question.id === questionId;\n          });\n\n          _this4.questions.splice(index, 1); // TODO: evaluar cambiar esto por un operation method en loopback.\n\n\n          _this4.answersService.getAnswers(questionId).then(function (answers) {\n            var _iterator = _createForOfIteratorHelper(answers),\n                _step;\n\n            try {\n              for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                var answer = _step.value;\n\n                _this4.answersService.deleteAnswer(answer.id);\n              }\n            } catch (err) {\n              _iterator.e(err);\n            } finally {\n              _iterator.f();\n            }\n          });\n        }\n      });\n    }\n  }, {\n    key: \"addQuestionToList\",\n    value: function addQuestionToList(question) {\n      this.questions.push(question);\n    }\n  }, {\n    key: \"addPositiveVote\",\n    value: function addPositiveVote(question) {\n      question.positiveVotes += 1;\n      this.questionsService.updateQuestion(question);\n    }\n  }, {\n    key: \"addNegativeVote\",\n    value: function addNegativeVote(question) {\n      question.negativeVotes += 1;\n      this.questionsService.updateQuestion(question);\n    }\n  }]);\n\n  return CategoryQuestionsComponent;\n}();\n\nCategoryQuestionsComponent = __decorate([Component({\n  selector: 'category-questions',\n  styleUrls: ['./category-questions.scss'],\n  templateUrl: './category-questions.component.html'\n}), __metadata(\"design:paramtypes\", [ActivatedRoute, QuestionsService, AnswersService, typeof (_a = typeof MatDialog !== \"undefined\" && MatDialog) === \"function\" ? _a : Object])], CategoryQuestionsComponent);\nexport { CategoryQuestionsComponent };","map":null,"metadata":{},"sourceType":"module"}