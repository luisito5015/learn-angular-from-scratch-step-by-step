{"ast":null,"code":"import _classCallCheck from \"/Users/luiscotto/Documents/Projects/CS-470/practice/lafs-web/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/luiscotto/Documents/Projects/CS-470/practice/lafs-web/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { ActivatedRouteSnapshot } from \"@angular/router\";\nimport { QuestionsService } from '../services/questions.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/questions.service\";\nexport var QuestionAnswersResolver = /*#__PURE__*/(function () {\n  var QuestionAnswersResolver = /*#__PURE__*/function () {\n    function QuestionAnswersResolver(questionsService) {\n      _classCallCheck(this, QuestionAnswersResolver);\n\n      this.questionsService = questionsService;\n    }\n\n    _createClass(QuestionAnswersResolver, [{\n      key: \"resolve\",\n      value: function resolve(route) {\n        var _this = this;\n\n        var questionSlug = route.paramMap.get('questionSlug');\n        return new Promise(function (resolve, reject) {\n          _this.questionsService.getQuestionBySlug(questionSlug).then(function (question) {\n            var breadcrumbs = [{\n              url: '/',\n              label: 'Categories'\n            }, {\n              url: 'questions/about/' + question.categorySlug,\n              label: question.categorySlug\n            }, {\n              url: 'question/' + questionSlug,\n              label: question.question\n            }];\n            return resolve({\n              question: question,\n              breadcrumbs: breadcrumbs\n            });\n          }, function (err) {\n            console.log(err);\n            return resolve(null);\n          });\n        });\n      }\n    }]);\n\n    return QuestionAnswersResolver;\n  }();\n\n  QuestionAnswersResolver.ɵfac = function QuestionAnswersResolver_Factory(t) {\n    return new (t || QuestionAnswersResolver)(i0.ɵɵinject(i1.QuestionsService));\n  };\n\n  QuestionAnswersResolver.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: QuestionAnswersResolver,\n    factory: QuestionAnswersResolver.ɵfac\n  });\n  return QuestionAnswersResolver;\n})();","map":null,"metadata":{},"sourceType":"module"}