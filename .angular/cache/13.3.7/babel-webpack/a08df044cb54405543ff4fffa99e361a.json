{"ast":null,"code":"import _classCallCheck from \"/Users/luiscotto/Documents/Projects/CS-470/practice/lafs-web/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/luiscotto/Documents/Projects/CS-470/practice/lafs-web/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { URLSearchParams } from '@angular/http';\nimport * as i0 from \"@angular/core\";\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@mean-expert-official>\n* @module JSONSearchParams\n* @license MIT\n* @description\n* JSON Parser and Wrapper for the Angular2 URLSearchParams\n* This module correctly encodes a json object into a query string and then creates\n* an instance of the URLSearchParams component for later use in HTTP Calls\n**/\n\nexport var JSONSearchParams = /*#__PURE__*/(function () {\n  var JSONSearchParams = /*#__PURE__*/function () {\n    function JSONSearchParams() {\n      _classCallCheck(this, JSONSearchParams);\n    }\n\n    _createClass(JSONSearchParams, [{\n      key: \"setJSON\",\n      value: function setJSON(obj) {\n        this._usp = new URLSearchParams(this._JSON2URL(obj, false));\n      }\n    }, {\n      key: \"getURLSearchParams\",\n      value: function getURLSearchParams() {\n        return this._usp;\n      }\n    }, {\n      key: \"_JSON2URL\",\n      value: function _JSON2URL(obj, parent) {\n        var parts = [];\n\n        for (var key in obj) {\n          parts.push(this._parseParam(key, obj[key], parent));\n        }\n\n        return parts.join('&');\n      }\n    }, {\n      key: \"_parseParam\",\n      value: function _parseParam(key, value, parent) {\n        var processedKey = parent ? parent + '[' + key + ']' : key;\n\n        if (value && (typeof value === 'object' || Array.isArray(value))) {\n          return this._JSON2URL(value, processedKey);\n        }\n\n        return processedKey + '=' + value;\n      }\n    }]);\n\n    return JSONSearchParams;\n  }();\n\n  JSONSearchParams.ɵfac = function JSONSearchParams_Factory(t) {\n    return new (t || JSONSearchParams)();\n  };\n\n  JSONSearchParams.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: JSONSearchParams,\n    factory: JSONSearchParams.ɵfac\n  });\n  return JSONSearchParams;\n})();","map":null,"metadata":{},"sourceType":"module"}